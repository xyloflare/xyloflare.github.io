---
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Container from '../../components/Container.astro';
import Navbar from '../../components/Navbar.astro';
import Model from '../../components/Model.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');

  return posts.map((post) => {
    return {
      params: {
        post: post.slug,
      },
      props: {
        post,
      },
    };
  });
}

interface Props {
  post: CollectionEntry<'posts'>;
}

const { post } = Astro.props;
const { Content } = await post.render();
---
<Layout>
  <Navbar transition:persist transition:persist-props transistion:name='navbar'/>
  <Model transition:name='model' transition:persist-props transition:persist/>
  <Container>
    <div class="post-metadata">
      <div>
        <a href="/posts/" class="link">
          {"Posts / "}
        </a>
        <span class="heading" style="font-size: 1.25rem;">
          {post.data.title}
        </span>
      </div>
      <p>{post.data.share.description}</p>
      <div class="post-tags">
        {post.data.tags.map(tag => <span class="post-tag">{tag}</span>)}
      </div>
    </div>
    <Content/>
  </Container>
</Layout>
<style>
.post-metadata {
  border-block: 0.125rem solid var(--underline);
  border-radius: 0.25rem;
  padding-bottom: 0.75rem;
  margin-bottom: 0.75rem;
  .heading {
    margin-bottom: 0;
  }
  p {
    margin-block: 0.5rem;
  }
  p > span {
    font-weight: 600;
  }
  .backbtn:hover {
    background-color: var(--surface1);
  }
  .post-tags { 
    margin-top: 0.75rem;
    .post-tag {
      display: inline-block;
      padding-inline: 0.75rem;
      padding-block: 0.25rem;
      border-radius: 1rem;
      font-size: 0.75rem;
      background-color: var(--surface1);
      margin-right: 0.5rem;
    }
  }
}
</style>
